//初始化克隆的控件
function initClone(dbName, signKeyValues, ctrlName, cloneURL) {
	$('#dlgRecordClone').on('shown.bs.modal', function (e) {
		$(":text:first", this).select().focus();
	})
	$("#btnRecordCloneOk").click(function () {
		var data = {
			DBName: dbName,
			OldSignPK: signKeyValues,
			BillName: ctrlName,
			NewPK: _.object(_.map($("#dlgRecordClone :text"), function (val) {
				return [$(val).data("field-name"), $(val).val()];
			}))
		};
		var btn = $(this);
		btn.prop("disabled", true);
		$.post(cloneURL, JSON.stringify(data), function (rev) {
			console.log(rev);
			if (rev.Ok) {
				alert("成功完成克隆");
				$("#dlgRecordClone").modal("hide");
			} else {
				alert(rev.Error);
			}
		}).always(function () {
			btn.prop("disabled", false);
		}).fail(function (err) {
			console.log(err);
			alert("error");
		});
		return false;
	});
}
var collectionBillData;
function initNotBrowse(fieldTypes, encodeData, typeString) {
	var gFieldTypes = fieldTypes;
	var Data = encodeData;
	collectionBillData = function () {
		var result = { OldData: Data, NewRecord: { Main: {}, Child: {} }, Remarks: {} };
		$("[data-bill-fieldname]").each(function () {
			var name = $(this).data("bill-fieldname");
			var v;
			//如果有自定义的收集方法，则调用
			var onEvent = $(this).data("oncollection");
			if (onEvent) {
				v = onEvent.call(this);
			} else {
				//如果是时间控件，则注意补全秒部分
				if ($(this).is("[type=datetime-local]")) {
					v = $(this).val();
					if (v.length == 16) v += ":00";
				} else if ($(this).is(":checkbox")) {
					//系统没有bool类型，只有字符串和整型，字符串在服务器端会自动转换成对应类型
					if ($(this).prop("checked")) {
						v = "1";
					} else {
						v = "0";
					}
				} else if ($(this).is(".form-control-static")) {
					v = $(this).html();
				} else {
					v = $(this).val();
				}
				//如果是bytea，则需要转成base64
				if (gFieldTypes[name] == typeString) {
					v = btoa(v);
				}
			}
			if ($(this).prop("required") && !v) {
				var str = "字段:" + name + " 不能为空";
				alert(str);
				$(this).focus();
				throw str;
			}
			if (v === "") v = null;

			result.NewRecord.Main[name] = v;
		});
		$("[data-bill-childname]").each(function () {
			var f = $(this).data("oncollection");
			var childName = $(this).data("bill-childname")
			if (!f) {
				var err = "没有定义 " + childName + " 的oncollection函数";
				alert(err);
				throw err;
			}

			var val = f.call(this);
			if (val) {
				result.NewRecord.Child[childName] = val;
			}
		})
		//收集remark
		var chks = $("#btnCheckResult").data("checkResults");
		if (chks) {
			_.each(chks, function (val) {
				result.Remarks[val.ID] = val.Remark;
			});
		}
		return result;
	}
}
function formatCheckResult(chr) {
	var category = "必改";
	if (chr.Must == 2) category = "备注";
	if (chr.Must == 0) category = "核实";
	var r = chr.ID + "[" + category + "]." + chr.Label;
	if (chr.Detail) r = r + "(" + chr.Detail + ")";
	if (chr.Remark) {
		r = r + " <span class='tooltip-remark'>" + chr.Remark + "</span>";
	}
	return r
}
function setupCheckResult(checkResults) {
	if (!checkResults || checkResults.length == 0) {
		$("#btnCheckResult").hide();
	} else {
		var html = $("<ol>");
		var hasMust = false;
		for (var i = 0; i < checkResults.length; i++) {
			//判断是否要旋转提示，有必改的条件或者，需要备注的却无备注，就要提示
			if (checkResults[i].Must == 1 ||
				(checkResults[i].Must == 2 && _.isEmpty(checkResults[i].Remark))) {
				hasMust = true;
			}
			html.append($("<li>").html(formatCheckResult(checkResults[i])));
		}
		$("#btnCheckResult").show();
		$("#btnCheckResult").data("checkResults", checkResults);
		$("#btnCheckResult").tooltip({ html: true })
			.tooltip('hide')
			.attr('data-original-title', html.prop('outerHTML'))
			.tooltip('fixTitle');
		if (hasMust) {
			$("#btnCheckResult i").addClass("animated");
			$("#btnCheckResult i").data("hasMust", true);
		} else {
			$("#btnCheckResult i").removeClass("animated");
			$("#btnCheckResult i").data("hasMust", false);
		}
	}
	var fieldCheckResult = {};
	//整理审核结果
	_.each(checkResults, function (val) {
		//每个涉及到的字段均加入这个审核结果
		_.each(val.ReferFields, function (fieldName) {
			var aField = fieldCheckResult[fieldName];
			if (aField) {
				aField.push(val);
			} else {
				fieldCheckResult[fieldName] = [val];
			}
		});
	});
	$(".bill-child,.bill-field").tooltip("hide");
	$(".bill-child,.bill-field").removeClass("check-error check-warning");
	_.each(fieldCheckResult, function (chkResults, fieldName) {
		//以Child.开头的就是子明细列表
		var field;
		if (fieldName.indexOf('Child.') == 0) {
			field = $(".bill-child[data-bill-childname=" + fieldName.substring(6) + "]");
		} else {
			field = $(".bill-field[data-bill-fieldname=" + fieldName + "]");
		}
		if (field) {
			var html = $("<ol>");
			var warning = false;
			for (var i = 0; i < chkResults.length; i++) {
				if (chkResults[i].Must == 0) {
					warning = true;
				}
				html.append($("<li>").html(formatCheckResult(chkResults[i])));
			}
			field.tooltip({ html: true })
				.tooltip('hide')
				.attr('data-original-title', html.prop('outerHTML'))
				.tooltip('fixTitle');
			if (warning) {
				field.addClass("check-warning");
			} else {
				field.addClass("check-error");
			}
		}
	});
}
function closeSelf() {
	if (self.frameElement && self.frameElement.tagName == "IFRAME" && self.frameElement.id == "frmSequenceOperateRight") {
		$(parent.document).find("#btnNext")[0].click();
	} else {
		window.close();
	}
}
function initBill(allowClone, dbName, signKeyValues, ctrlName, cloneURL, operate, fieldTypes, encodeData,
	typeString, checkResults) {
	if (allowClone) {
		initClone(dbName, signKeyValues, ctrlName, cloneURL);
	}
	if (operate != "browse") {
		initNotBrowse(fieldTypes, encodeData, typeString);
	}

	$(function () {
		$("#btnCheckRemarkOk").click(function () {
			var checkResults = $("#btnCheckResult").data("checkResults");
			//收集每个录入框的录入值
			$("#dlgCheckRemark form :input").each(function () {
				for (var i = 0; i < checkResults.length; i++) {
					if (checkResults[i].ID == $(this).data("checkid")) {
						checkResults[i].Remark = $(this).val();
						break;
					}
				}
			});
			setupCheckResult(checkResults);
			$("#dlgCheckRemark").modal("hide");
		});
		$("#btnCheckResult").click(function () {
			var checkResults = $("#btnCheckResult").data("checkResults");
			var form = $("#dlgCheckRemark form");
			form.empty();
			for (var i = 0; i < checkResults.length; i++) {
				var chr = checkResults[i];
				var str = chr.ID + "." + chr.Label + (chr.Detail ? "(" + chr.Detail + ")" : "");
				var id = "edt" + chr.ID;
				form.append(
					$('<div class="form-group">' +
						'<label for="' + id + '">' + str + ':</label>' +
						'<input type="text" class="form-control" data-checkid="' + chr.ID + '" id="' + id + '" value="' + chr.Remark + '" placeholder="请录入审核备注">' +
						'</div>')
				);
			}
			$("#dlgCheckRemark").modal();
		});
		$("#btnCheckResult i").mouseleave(function () {
			if ($(this).data("hasMust")) {
				$(this).addClass("animated");
			}
		});
		$("#btnCheckResult i").mouseenter(function () {
			if ($(this).data("hasMust")) {
				$(this).removeClass("animated");
			}
		});
		setupCheckResult(checkResults);
		$(window).resize();
		$("#btnCancel").click(function () {
			closeSelf();
		});
		$("#btnCheck").click(function () {
			var btnCall = $(this);
			var data = collectionBillData();
			btnCall.attr("disabled", true);
			data.CheckOnly = true;
			$.post(window.location.href, JSON.stringify(data), function (callbackData) {
				if (callbackData.Ok) {
					if (_.isEmpty(callbackData.CheckResults)) {
						alert("成功完成审核，数据满足条件，可以保存");
					} else {
						alert("成功完成审核，有出错情况，请查看");
					}
					setupCheckResult(callbackData.CheckResults);
				} else {
					alert(callbackData.Error);
				}
			}, "json")
				.fail(function (jqXHR, textStatus, errorThrown) {
					alert("发生一个错误，执行被取消,status:" + textStatus + ",error:" + errorThrown);
				})
				.always(function () {
					btnCall.removeAttr("disabled");
				});
		});
		$("#btnOk").click(function () {
			var btnCall = $(this);
			if (operate == "delete") {
				btnCall.attr("disabled", true);
				$.ajax({
					url: window.location.href,
					type: 'DELETE',
					data: encodeData,//发送旧数据至服务器
					success: function (result) {
						if (result.Ok) {
							closeSelf();
						} else {
							if (result.Error) {
								alert(result.Error);
							}
						}
					}
				}, "json")
					.fail(function (jqXHR, textStatus, errorThrown) {
						alert("发生一个错误，执行被取消,status:" + textStatus + ",error:" + errorThrown);
					})
					.always(function () {
						btnCall.removeAttr("disabled");
					});
				return;
			}
			var data = collectionBillData();
			btnCall.attr("disabled", true);
			$.post(window.location.href, JSON.stringify(data), function (callbackData) {
				if (callbackData.Ok) {
					closeSelf();
				} else {
					if (callbackData.Error) {
						alert(callbackData.Error);
					} else {
						alert("数据不符合审核要求，请改正后重新保存");
					}
					setupCheckResult(callbackData.CheckResults);
				}
			}, "json")
				.fail(function (jqXHR, textStatus, errorThrown) {
					alert("发生一个错误，执行被取消,status:" + textStatus + ",error:" + errorThrown + ",data:" + JSON.stringify(data));
				})
				.always(function () {
					btnCall.removeAttr("disabled");
				});
		});
		$('[data-toggle="tooltip"]').tooltip({
			html: true
		});
		$(":input:first").focus().select();
	});
}
