var showQueryDefine;
function initQueryDefine(allColumns, uniqueFields) {
	var queryDefineCallBack;
	var advCondition;
	advCondition = ace.edit($("#queryDefine .adv-condition")[0]);
	advCondition.setTheme("ace/theme/sqlserver");
	advCondition.getSession().setMode("ace/mode/sql");
	showQueryDefine = function(title, data, callback) {
		$("#spTitle").text(title);
		advCondition.setValue(data.PlainText || "");

		$("#queryDefine .condition-name").val(data.Name);
		$("#queryDefine .condition-rows .cnt_row").remove();
		if (data.Conts && data.Conts.length > 0) {
			for (idx = 0; idx < data.Conts.length; idx++) {
				$("#queryDefine .condition-rows").append(newConditionRow(data.Conts[idx]));
			}
		} else {
			$("#queryDefine .condition-rows").append(newConditionRow({ Logic: "AND" }));
		}
		var all = _.difference(_.pluck(allColumns, "Name"), _.pluck(data.DspCols, "Name"));
		var ul = $("#queryDefine .allcolumn");
		ul.empty();
		ul.append(_.map(all, function (v) {
			return $('<li class="list-group-item"><input type="checkbox" autocomplete="off" checked><i class="my-handle fa fa-fw fa-hand-o-up"></i>' + v + '</li>').data({ name: v });
		}));
		Sortable.create(ul[0], {
			group: "column", animation: 150, ghostClass: 'ghost', scroll: true, handle: ".my-handle",
			onAdd: function (/**Event*/evt) {
				toAllColumn(evt.item);
			}
		});
		ul = $("#queryDefine .selcolumn");
		ul.empty();
		ul.append(_.map(data.DspCols, function (v) {
			var hide = "fa-check";
			var sort = "fa-sort";
			if (v.Hidden) { hide = "fa-ban"; }
			if (v.Order == "+") { sort = "fa-sort-asc"; }
			if (v.Order == "-") { sort = "fa-sort-desc"; }
			var str = '<li class="list-group-item"><input type="checkbox" autocomplete="off" checked><i class="my-handle fa fa-fw fa-hand-o-up"></i><i class="fa fa-fw ' + hide + ' field_hide"></i><i class="fa fa-fw ' + sort + ' field_sort"></i>' + v.Name + '</li>';
			var el = $(str).data({ name: v.Name });
			$(".field_sort", el).click(selcolumn_sort_click);
			$(".field_hide", el).click(selcolumn_hide_click);
			return el;
		}));
		Sortable.create(ul[0], {
			group: "column", animation: 150, ghostClass: 'ghost', scroll: true, handle: ".my-handle",
			onAdd: function (evt) {
				toSelColumn(evt.item);
			}
		});
		queryDefineCallBack = callback;
		$("#queryDefine").modal('show');
	}
	$("#queryDefine .btnOk").click(function () {
		var conditions = $("#queryDefine .condition-rows .cnt_row").map(function () {
			return getDataFromConditionRow(this)
		}).get();
		var frm = $("#queryDefine .modal-title form");
		if (!frm[0].checkValidity()) {
			$('<input type="submit">').hide().appendTo(frm).click().remove();
			return
		}
		var cols = $("#queryDefine .selcolumn .list-group-item").map(function () {
			return {
				Name: $(this).data("name"),
				Hidden: $(".field_hide", this).hasClass("fa-ban"),
				Order: $(".field_sort", this).hasClass("fa-sort-asc") ? "+" : ($(".field_sort", this).hasClass("fa-sort-desc") ? "-" : "")
			}
		}).get();
		var colNames = _.map(cols, function (val) {
			return val.Name;
		});
		if (colNames && colNames.length > 0 &&
			_.difference(
				_.intersection(colNames, uniqueFields),
				uniqueFields).length > 0
		) {
			alert(uniqueFields.join(",") + " 必须要在显示的列中");
			return false;
		}
		$("#queryDefine").modal('hide');
		queryDefineCallBack({
			Name: $("#queryDefine .condition-name").val(),
			Conts: conditions,
			PlainText: advCondition.getValue(),
			DspCols: cols
		});
	});
	$("#queryDefine").on('shown.bs.modal', function (event) {
		$(this).find(".condition-name")[0].focus();
		$(this).find(".condition-name").select();
		advCondition.renderer.updateFull();

	});

	$("#queryDefine .chkAllColumn").change(function () {
		$("#queryDefine .allcolumn .list-group-item :checkbox").prop("checked", $(this).prop("checked"));
	});
	$("#queryDefine .chkSelColumn").change(function () {
		$("#queryDefine .selcolumn .list-group-item :checkbox").prop("checked", $(this).prop("checked"));
	});
	$("#queryDefine .btnAllColumn").click(function () {
		var items = $("#queryDefine .allcolumn .list-group-item:has(:checkbox:checked)")
		items.each(function () {
			toSelColumn(this);
		});
		$("#queryDefine .selcolumn").append(items);
	});
	function toSelColumn(item) {
		$(item).find(".my-handle").after('<i class="fa fa-fw fa-check field_hide"></i><i class="fa fa-fw fa-sort field_sort"></i>');
		$(".field_sort", item).click(selcolumn_sort_click);
		$(".field_hide", item).click(selcolumn_hide_click);
	}
	function toAllColumn(item) {
		$(item).find(".field_sort,.field_hide").remove();
	}
	function selcolumn_sort_click() {
		if ($(this).hasClass("fa-sort")) {
			$(this).removeClass("fa-sort").addClass("fa-sort-asc");
		} else if ($(this).hasClass("fa-sort-asc")) {
			$(this).removeClass("fa-sort-asc").addClass("fa-sort-desc");
		} else {
			$(this).removeClass("fa-sort-desc").addClass("fa-sort");
		}

	}
	function selcolumn_hide_click() {
		if ($(this).hasClass("fa-ban")) {
			$(this).removeClass("fa-ban").addClass("fa-check");
		} else {
			$(this).removeClass("fa-check").addClass("fa-ban");
		}

	}
	$("#queryDefine .btnSelColumn").click(function () {
		var items = $("#queryDefine .selcolumn .list-group-item:has(:checkbox:checked)")
		items.each(function () {
			toAllColumn(this);
		});
		$("#queryDefine .allcolumn").append(items);
	});
	$("#queryDefine .colFilter").change(function () {
		$("#queryDefine .allcolumn li").show();
		$("#queryDefine .allcolumn li:not(:contains(" + $(this).val() + "))").hide();
	});
}