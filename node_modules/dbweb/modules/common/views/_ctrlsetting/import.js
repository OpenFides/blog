function btnUpClick() {
	var row = $(this).closest("tr");
	if (row.prev()) {
		row.prev().before(row);
	}
	autoFillRowNo();
}
function btnDownClick() {
	var row = $(this).closest("tr");
	if (row.next()) {
		row.next().after(row);
	}
	autoFillRowNo();
}
//构造一个新的行
function buildRow(data) {
	var row = $($("#tmplRow").html());
	row.find(".lblName").html(data.Name);
	row.find(".selStyle").val(data.Style);
	row.find(".edtValue").val(data.Value);
	row.find(".edtRemark").val(data.Remark);
	row.find(".btnUp").click(btnUpClick);
	row.find(".btnDown").click(btnDownClick);
	return row
}
//自动调整行号
function autoFillRowNo() {
	$("#tabRows tbody tr").each(function () {
		$(this).find(".lblNo").html($(this).index() + 1);
	})
}
//收集一行的数据
function collectionRow(row) {
	return {
		Name: $(row).find(".lblName").html(),
		Style: $(row).find(".selStyle").val(),
		Value: $(row).find(".edtValue").val(),
		Remark: $(row).find(".edtRemark").val()
	}
}
function initImport(readonly, fields, tableNames, table) {
	var edtWhere = ace.edit("edtWhere");
	edtWhere.setTheme("ace/theme/sqlserver");
	edtWhere.getSession().setMode("ace/mode/sql");
	edtWhere.getSession().setOptions({ tabSize: 4, useSoftTabs: true });
	var edtBefore = ace.edit("edtBefore");
	edtBefore.setTheme("ace/theme/sqlserver");
	edtBefore.getSession().setMode("ace/mode/sql");
	edtBefore.getSession().setOptions({ tabSize: 4, useSoftTabs: true });

	var edtAfter = ace.edit("edtAfter");
	edtAfter.setTheme("ace/theme/sqlserver");
	edtAfter.getSession().setMode("ace/mode/sql");
	edtAfter.getSession().setOptions({ tabSize: 4, useSoftTabs: true });
	if (readonly) {
		edtWhere.setReadOnly(true);
		edtBefore.setReadOnly(true);
		edtAfter.setReadOnly(true);
	}

	var selTable = $("#selTable").select2();
	var selDB = $("#selDB").select2();
	var Fields = fields || [];//数据库中存贮的字段定义,运行collectionColumns后，存贮最新的定义

	function setTableNames(names) {
		var oldValue = selTable.val();
		selTable.empty();
		selTable.select2({ data: names });
		selTable.val(oldValue).trigger("change");
	}
	$(function () {
		setTableNames(tableNames);
		selTable.val(table).trigger("change");
	});
	function buildCallUrl(action, param) {
		var url = new URI(window.location.href);
		var pam = _.pick(url.search(true), "_s");
		pam.dest = "import";
		pam.action = action;
		_.extend(pam, param);
		url.search(pam);
		return url;
	}
	//收集界面上的定义，结果存贮在全局变量Fields中
	function collectionColumns() {
		if ($("#tabRows tbody tr").length > 0) {
			Fields = $("#tabRows tbody tr").map(function () {
				return collectionRow(this);
			}).get() || [];
		}
	}
	//根据最新的字段清单，改变界面
	function setColumnNames(columns, reorder) {
		//先收集界面上的定义
		collectionColumns();
		$("#tabRows tbody").empty();
		//根据新的名称，重新生成定义
		if (reorder) {
			for (var i = 0; i < columns.length; i++) {
				var findField = _.find(Fields, function (fld) {
					return fld.Name == columns[i];
				});
				if (!findField) {
					findField = {
						Name: columns[i],
						Style: "NORMAL"
					};
				}
				$("#tabRows tbody").append(buildRow(findField));
			}
		} else {
			//需要保留原来的次序
			for (var i = 0; i < Fields.length; i++) {
				if (_.indexOf(columns, Fields[i].Name) >= 0) {
					$("#tabRows tbody").append(buildRow(Fields[i]));
				}
			}
			//新增的字段添加在最后
			for (var i = 0; i < columns.length; i++) {
				var findField = _.find(Fields, function (fld) {
					return fld.Name == columns[i];
				});
				if (!findField) {
					findField = {
						Name: columns[i],
						Style: "NORMAL"
					};
					$("#tabRows tbody").append(buildRow(findField));
				}
			}
		}
	}
	$("#selDB").change(function () {
		var u = buildCallUrl("getTableList", { db: $("#selDB").val() });
		selDB.prop("disabled", true);
		selTable.prop("disabled", true);
		$.get(u.toString(), function (names) {
			setTableNames(names);
		}).fail(function () {
			alert("get table names error!");
		}).always(function () {
			selDB.prop("disabled", false);
			selTable.prop("disabled", false);
		});
	});
	var previousTable = table;
	$("#selTable").on('focus', function () {
		// Store the current value on focus and on change
		previousTable = this.value;
	}).change(function () {
		var tabName = $(this).val();
		if (!tabName) return;
		var u = buildCallUrl("getColumnList", { db: $("#selDB").val(), table: tabName });
		selDB.prop("disabled", true);
		selTable.prop("disabled", true);
		$.get(u.toString(), function (names) {
			setColumnNames(names, previousTable != tabName);
			autoFillRowNo();
		}).fail(function () {
			alert("get column names error!");
		}).always(function () {
			selDB.prop("disabled", false);
			selTable.prop("disabled", false);
		});
	});

	/*******************************************************/
	$("#import_param_setting").data("oncollection", function () {
		collectionColumns();
		return JSON.stringify({
			DB: $("#selDB").val(),
			Table: $("#selTable").val(),
			Where: edtWhere.getValue(),
			After: edtAfter.getValue(),
			Before: edtBefore.getValue(),
			Fields: Fields
		}, null, "\t");
	});
}